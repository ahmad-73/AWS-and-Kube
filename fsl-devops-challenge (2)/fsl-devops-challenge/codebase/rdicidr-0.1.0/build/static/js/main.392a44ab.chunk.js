(this.webpackJsonprdicidr=this.webpackJsonprdicidr||[]).push([[0],[,,,,,,,,function(e,t,s){},function(e,t,s){},,function(e,t,s){},function(e,t,s){},function(e,t,s){},function(e,t,s){},function(e,t,s){"use strict";s.r(t);var r=s(1),n=s.n(r),a=s(3),c=s.n(a),i=(s(8),s(9),s(0));var d=e=>{const[t,s]=Object(r.useState)(""),[n,a]=Object(r.useState)(e.value<255),c="octet ".concat(n?"valid":"invalid");return Object(i.jsxs)("div",{className:c,children:[Object(i.jsx)("input",{type:"text",value:e.value,onChange:t=>{let r=!1;t.target.value<0||t.target.value>255?(r=!0,a(!1),e.setValid(!1),s("incorrect value")):""===t.target.value||isNaN(t.target.value)?r=!1:(r=!0,a(!0),e.setValid(!0)),e.changeFunction(t.target.value,e.index,r)}}),Object(i.jsx)("div",{className:"error-message",children:t})]})};s(11);var l=e=>{const[t,s]=Object(r.useState)(""),[n,a]=Object(r.useState)(!0),c="netmask ".concat(n?"valid":"invalid");return Object(i.jsxs)("div",{className:c,children:[Object(i.jsx)("input",{type:"text",value:e.value,onChange:t=>{let r=!1;t.target.value<0||t.target.value>32?(r=!0,a(!1),e.setValid(!1),s("incorrect value")):""===t.target.value||isNaN(t.target.value)?r=!1:(r=!0,a(!0),e.setValid(!0)),e.changeFunction(t.target.value,r)}}),Object(i.jsx)("div",{className:"error-message",children:t})]})};s(12);var o=e=>{const[t,s]=Object(r.useState)(""),[n,a]=Object(r.useState)(e.value<e.maxNumberOfSubnets),c="subnet-numbers ".concat(n?"valid":"invalid");return Object(i.jsxs)("div",{className:c,children:["Number of subnets:",Object(i.jsx)("input",{type:"text",value:e.value,onChange:t=>{let r=!1;t.target.value<0||t.target.value>e.maxNumberOfSubnets?(r=!0,a(!1),s("incorrect number of subnets")):""===t.target.value?r=!0:isNaN(t.target.value)?r=!1:(r=!0,a(!0)),e.onChange(t.target.value,r)}}),Object(i.jsx)("div",{className:"error-message",children:t})]})};class u{constructor(e,t){this.address=e,this.mask=parseInt(t),this.fullAddress="",this.reserved=2}setReserved(e){this.reserved=e}setSubnetMask(e){this.mask=e,this.fullAddress=""}setOctet(e,t){this.address[t]=e,this.fullAddress=""}getBinnary(){return this.address.map(((e,t)=>e.toString(2).padStart(8,"0"))).join(".")}getOnlyBinnary(){return this.address.map(((e,t)=>e.toString(2).padStart(8,"0"))).join("")}getFullAddress(){return""!==this.fullAddress||(this.fullAddress=parseInt(this.getBinnary().replace(/\./g,"").padStart(32,"0"),2)),this.fullAddress}networkAddress(){return((this.getFullAddress()&parseInt((1<<32-this.mask>>>0).toString(2).padStart(32,"1"),2))>>>0).toString(2).padStart(32,"0").match(/.{1,8}/g).map((e=>parseInt(e,2))).join(".")}firstUsableAddress(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0;return(1+(this.getFullAddress()&parseInt((1<<32-this.mask>>>0).toString(2).padStart(32,"1"),2))+e>>>0).toString(2).padStart(32,"0").match(/.{1,8}/g).map((e=>parseInt(e,2))).join(".")}lastUsableAddress(){return(((this.getFullAddress()|~(parseInt((1<<32-this.mask).toString(2).padStart(32,"1"),2)>>>0))>>>0)-1).toString(2).padStart(32,"0").match(/.{1,8}/g).map((e=>parseInt(e,2))).join(".")}broadcastAddress(){return((this.getFullAddress()|~(parseInt((1<<32-this.mask).toString(2).padStart(32,"1"),2)>>>0))>>>0).toString(2).padStart(32,"0").match(/.{1,8}/g).map((e=>parseInt(e,2))).join(".")}netmask(){return parseInt((1<<32-this.mask).toString(2).padStart(32,"1"),2).toString(2).padStart(32,"0").match(/.{1,8}/g).map((e=>parseInt(e,2))).join(".")}count(){return parseInt((1<<32-this.mask).toString(2),2)}availableCount(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this.reserved;return this.count()-e}getClosestPowerOfTwo(e){const t=(+e).toString(2),s=t.length;return parseInt(t.substring(1),2)>>>0>0?1<<s>>>0:e}breakIntoSubnets(e){if(this.numberOfPossibleSubnets<e||e<=0)return["Can't break into ".concat(e," subnets")];const t=[],s=(+ +this.getClosestPowerOfTwo(e)).toString(2).length-1,r=parseInt("1".repeat(s),2)<<32-this.mask-s>>>0,n=parseInt((1<<32-this.mask).toString(2).padStart(32,"1"),2),a=this.mask+s,c=(n|r)>>>0;let i=n,d=this.address;for(;i<=c;){const e=new u(d,a);t.push({networkAddress:e.networkAddress(),netmask:a,count:e.count()}),i+=e.count();d=(parseInt(e.getOnlyBinnary(),2)+e.count()).toString(2).padStart(32,"0").match(/.{1,8}/g).map((e=>parseInt(e,2)))}return t}numberOfPossibleSubnets(){return 2**(30-this.mask)}}s(13);var j=e=>{const[t,s]=Object(r.useState)(new u([10,0,8,0],21)),[n,a]=Object(r.useState)(!0),[c,j]=Object(r.useState)(!0),[b,h]=Object(r.useState)(0),g=(e,r,n)=>{const a=[...t.address];n&&(a[r]=+e,s(new u(a,t.mask)))};return Object(i.jsxs)("div",{children:[Object(i.jsxs)("div",{className:"address-container",children:[t.address.map(((e,t)=>Object(i.jsxs)("div",{className:"octet-container",children:[Object(i.jsx)(d,{value:e,index:t,setValid:a,changeFunction:g}),t<3?Object(i.jsx)("span",{children:"."}):Object(i.jsx)("span",{className:"slash",children:"/"})]},"oct-container-".concat(t))))," ",Object(i.jsx)(l,{value:t.mask,setValid:a,changeFunction:(e,r)=>{r&&s(new u(t.address,e))}})]}),n?Object(i.jsxs)("div",{className:"results",children:[Object(i.jsxs)("div",{children:[Object(i.jsx)("strong",{children:"Binary:"}),Object(i.jsx)("span",{children:t.getBinnary()})]}),Object(i.jsxs)("div",{children:[Object(i.jsx)("strong",{children:"Network Address:"}),Object(i.jsx)("span",{children:t.networkAddress()})]}),Object(i.jsxs)("div",{children:[Object(i.jsx)("strong",{children:"First usable address:"}),Object(i.jsx)("span",{children:t.firstUsableAddress()})]}),Object(i.jsxs)("div",{children:[Object(i.jsx)("strong",{children:"First usable address(AWS):"}),Object(i.jsx)("span",{children:t.firstUsableAddress(3)}),Object(i.jsx)("br",{}),Object(i.jsx)("span",{children:"AWS reserves first four addresses for: Network, Router, DNS, Future use"})]}),Object(i.jsxs)("div",{children:[Object(i.jsx)("strong",{children:"Last usable address:"}),Object(i.jsx)("span",{children:t.lastUsableAddress()})]}),Object(i.jsxs)("div",{children:[Object(i.jsx)("strong",{children:"Broadcast Address:"}),Object(i.jsx)("span",{children:t.broadcastAddress()})]}),Object(i.jsxs)("div",{children:[Object(i.jsx)("strong",{children:"Netmask:"}),Object(i.jsx)("span",{children:t.netmask()})]}),Object(i.jsxs)("div",{children:[Object(i.jsx)("strong",{children:"Count:"}),Object(i.jsx)("span",{children:t.count()})]}),Object(i.jsxs)("div",{children:[Object(i.jsx)("strong",{children:"Usable addresses:"}),Object(i.jsx)("span",{children:t.availableCount()})]}),Object(i.jsxs)("div",{children:[Object(i.jsx)("strong",{children:"Usable addresses(AWS):"}),Object(i.jsx)("span",{children:t.availableCount(5)})]})]}):"",Object(i.jsxs)("div",{className:"subnets",children:["Break into subnets:",Object(i.jsx)("input",{name:"showSubnetting",type:"checkbox",checked:c,onChange:e=>{j(e.target.checked)}}),Object(i.jsx)("br",{}),Object(i.jsx)("br",{}),c?Object(i.jsxs)("div",{id:"details",children:["max number of subnets: ",t.numberOfPossibleSubnets()," with a minimum of 4 addreses (minus Network, broadcast, 2 available addresses) closest: ",t.getClosestPowerOfTwo(b),Object(i.jsxs)("div",{id:"subnet-input-container",children:[Object(i.jsx)(o,{value:b,onChange:(e,t)=>{t&&h(e)},maxNumberOfSubnets:t.numberOfPossibleSubnets()}),(e=>{const t=[];return e.forEach(((e,s)=>{t.push(Object(i.jsxs)("div",{children:[e.networkAddress,"/",e.netmask," (",e.count," hosts)"]},"networkAddress-".concat(s)))})),t})(t.breakIntoSubnets(b))]})]}):""]})]})};s(14);var b=function(){return Object(i.jsxs)("div",{className:"App",children:[Object(i.jsx)("header",{className:"App-header",children:Object(i.jsx)("div",{children:"CIDR Calculator"})}),Object(i.jsx)(j,{}),Object(i.jsxs)("footer",{children:[Object(i.jsx)("hr",{}),"If you find this tool useful, you might enjoy reading my blog:"," ",Object(i.jsx)("a",{href:"https://rderik.com",children:"rderik.com"})]})]})};var h=e=>{e&&e instanceof Function&&s.e(3).then(s.bind(null,16)).then((t=>{let{getCLS:s,getFID:r,getFCP:n,getLCP:a,getTTFB:c}=t;s(e),r(e),n(e),a(e),c(e)}))};c.a.render(Object(i.jsx)(n.a.StrictMode,{children:Object(i.jsx)(b,{})}),document.getElementById("root")),h()}],[[15,1,2]]]);
//# sourceMappingURL=main.392a44ab.chunk.js.map